name: Tests

on: [push, pull_request]

jobs:
  build-ubuntu:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: recursive
    - name: Install Dependencies
      run: sudo apt-get install xorg-dev libglu1-mesa-dev
    - name: Configure
      run: cmake -B build .
    - name: Build
      run: cmake --build build
    - name: Test
      working-directory: build
      run: ctest --output-on-failure

  build-windows:
    runs-on: windows-latest
    strategy:
      fail-fast: false
      max-parallel: 1
      matrix:
        compiler: [mingw-w64,msvc16]
        bits: [32,64]
        include:
        - compiler: mingw-w64
          bits: 32
          ARCH: "i686"
          PLATFORM_NAME: "MinGW Makefiles"
        - compiler: mingw-w64
          bits: 64
          ARCH: "x86_64"
          PLATFORM_NAME: "MinGW Makefiles"
        - compiler: msvc16
          bits: 32
          ARCH: "x86"
          VSARCHPATH: "Win32"
          PLATFORM_NAME: "Visual Studio 16 2019"
        - compiler: msvc16
          bits: 64
          ARCH: "x64" 
          VSARCHPATH: "x64"
          PLATFORM_NAME: "Visual Studio 16 2019"
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: recursive
        
    # Setup Visual Studio
    - name: Setup MSBuild
      uses: microsoft/setup-msbuild@v1.0.2
      if: matrix.compiler == 'msvc16'
      
    - name: Configure
      run: cmake -G ${{ matrix.platform_name}} -A ${{ matrix.ARCH }} -B build_${{ matrix.compiler }}${{ matrix.ARCH }} .
      
    - name: Build
      run: cmake --build build_${{ matrix.compiler }}${{ matrix.ARCH }} --config Release
      
    - name: Test (mingw-w64)
      run: build\bin\raylib-lua-sol.exe tests/raylib-lua-sol-tests.lua
      if: matrix.compiler == "mingw-w64"
      
    - name: Test (msvc16)
      run: build\bin\Release\raylib-lua-sol.exe tests/raylib-lua-sol-tests.lua
      if: matrix.compiler == "msvc16"
